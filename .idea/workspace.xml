<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0055a1b8-1a5d-41ab-b0ec-01070a075718" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api/db/column.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/db/csv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/db/row.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/example_csv.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/helpers/helpers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/models/csv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/server/router/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/column/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/column/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/column/view.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/dto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/row/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/row/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/row/view.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/csv/view.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web/src/app/app.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.dockerignore" beforeDir="false" afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/csv_processor.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/csv_processor.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose-dev.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose-dev.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/init-db.sql" beforeDir="false" afterPath="$PROJECT_DIR$/init-db.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/db/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/db/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/api/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/api/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/model/technology.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/server/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/app_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/.editorconfig" beforeDir="false" afterPath="$PROJECT_DIR$/web/.editorconfig" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/web/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/.vscode/extensions.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/.vscode/extensions.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/.vscode/launch.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/.vscode/launch.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/.vscode/tasks.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/.vscode/tasks.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/angular.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/angular.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/app.component.css" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/app.component.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/app.component.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/app.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/app.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/tech/tech.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/tech/tech.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/tech/tech.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/tech/tech.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/tech/tech.model.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/tech/tech.model.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/app/tech/tech.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/app/tech/tech.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/assets/.gitkeep" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/assets/.gitkeep" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/assets/logo.svg" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/assets/logo.svg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/environments/environment.development.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/environments/environment.development.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/environments/environment.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/environments/environment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/favico.ico" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/favico.ico" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/src/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/styles.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/tsconfig.app.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/tsconfig.app.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webapp/tsconfig.spec.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/tsconfig.spec.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.darwin-amd64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;scarrington76&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/scarrington76/csv_processor.git&quot;,
    &quot;accountId&quot;: &quot;fdadbeab-fd4b-47f3-84e7-d8e0754e964d&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2tabyXMWEKiCnQqya45id0SwVx7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.Docker.executor": "Run",
    "Go Build.API.executor": "Run",
    "Go Build.go build csv_processor main.go.executor": "Run",
    "Go Build.go build main.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/scottcarrington/GolandProjects/csv_processor/api/v1/csv/row",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.start.executor": "Run",
    "npm.web.executor": "Run"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api/v1/csv/row" />
      <recent name="$PROJECT_DIR$/api/v1/csv/column" />
      <recent name="$PROJECT_DIR$/api/v1" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api" />
      <recent name="$PROJECT_DIR$/api/server" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.API">
    <configuration name="csv" type="CompoundRunConfigurationType">
      <toRun name="API" type="GoApplicationRunConfiguration" />
      <toRun name="web" type="js.build_tools.npm" />
      <method v="2" />
    </configuration>
    <configuration name="API" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="csv_processor" />
      <working_directory value="$PROJECT_DIR$/api" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/api/main.go" />
      <method v="2">
        <option name="RunConfigurationTask" enabled="true" run_configuration_name="Docker" run_configuration_type="docker-deploy" />
      </method>
    </configuration>
    <configuration name="Docker" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose-dev.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="web" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/web/package.json" />
      <command value="start" />
      <node-interpreter value="project" />
      <envs />
      <EXTENSION ID="com.intellij.lang.javascript.buildTools.npm.rc.StartBrowserRunConfigurationExtension">
        <browser name="98ca6316-2f89-46d9-a9e5-fa9e2b0625b3" start="true" url="http://localhost:3000/" />
      </EXTENSION>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Compound.csv" />
      <item itemvalue="Docker.Docker" />
      <item itemvalue="Go Build.API" />
      <item itemvalue="npm.web" />
    </list>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-85c80fddc9a6-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.23654.166" />
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-GO-243.23654.166" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>